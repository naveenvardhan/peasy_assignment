c
source.html_safe
source = File.read(Rails.root.join('app', 'views', "users/index.liquid"))
source.html_safe
File.read(Rails.root.join('app', 'views', "users/index.liquid"))
File.read(Rails.root.join('app', 'views', "#{template_path}.liquid"))
source.html_safe
source = "<h1>Hello, {{ #{name} }}!</h1>"
c
template = Liquid::Template.parse(template_content)
locals.transform_keys(&:to_s)
c
u
daily_record
daily_record.set_avg_ages
    daily_record.save!
daily_record = DailyRecord.where(date: self.created_at.to_date).first
self.created_at.to_date
self.created_at
self.id
self.date
self
self.id
c
time
(0..23).map{|i| i }
(0..23).each do |i|
male_count
$redis.hget(male_count, 18)
$redis.hget(male_count, 17)
$redis.hincrby(male_count, 18, 11)
$redis.hget(male_count, 17)
$redis.hincrby(male_count, 17, 11)
$redis.hget(male_count, 17)
$redis.hget(male_count, 16)
$redis.hget(male_count, 14)
$redis.hget(male_count, 13)
$redis.hget(male_count, 15)
$redis.hget(male_count, 16)
$redis.hincrby(male_count, 16, 21)
$redis.hincrby(male_count, time, 21)
male_count = "male_count:#{date}"
time
$redis.hincrby(redis_key, 15)
user_count[:male_count]
user_count
male_count
male_count = "male_count:#{date}"
    female_count = "female_count:#{date}"
time = Time.now.strftime('%H')
date = Date.current.strftime('%Y-%m-%d')
date
male_count = "male_count:#{date}"
    time = Time.now.strftime('%H')
c
redis_key
a = $redis.hget(nil, time)
a = $redis.hget(redis_key, time)
a = $redis.hget(redis_key, nil)
a.to_i
a
a = $redis.hget(redis_key, time)
$redis.hget(redis_key, time)
$redis.hincrby(redis_key, time, 15)
user_count
 $redis
$redis.hincrby(redis_key, time, user_count)
redis_key = "daily_job_count:#{date}"
time = Time.now.strftime('%H')
date = Date.current.strftime('%Y-%m-%d')
user_count
c
puts result["gender"]
      puts result["name"]
      puts result["location"]
      puts result["login"]["uuid"]
      puts result["dob"]["age"]
result = x
x.keys
x= JSON.parse(response.body)["results"].first
JSON.parse(response.body)["info"]
JSON.parse(response.body).keys
JSON.parse(response.body)["results"].first
JSON.parse(response.body)["results"]
JSON.parse(response.body).keys
JSON.parse(response.body)
response.body
puts response.body
response.body
response.body["results"]
